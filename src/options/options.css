:root {
  --grey-leia: #fafafa;
  --grey-luke: #ccc;
  --blue: #2b4eed;
  --red: #ec130e;
  --tiny-space: 4px;

  --Field_padding-horizontal: 22px;
  --Field_changed-width: 4px;
  --button_border-width: 2px;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  background-repeat: no-repeat;
}

html {
  background-color: var(--grey-leia);
  color: black;
  font-family: system-ui;
}

html.firefox {
  font: menu;
}

body {
  max-width: 800px;
  margin: 50px auto;
  background-color: white;
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.5);
  font-size: 16px;
  line-height: 1.25;
}

input,
button,
select,
textarea {
  min-width: 0;
  margin: 0;
  padding: 0.125em 0.375em;
  border: 1px solid var(--grey-luke);
  border-radius: 0;
  background: white;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  transition: border-color 200ms;
}

input:hover,
button:hover,
select:hover,
textarea:hover,
input:focus,
button:focus,
select:focus,
textarea:focus {
  border-color: var(--blue);
  outline: none;
}

input:disabled,
button:disabled,
select:disabled,
textarea:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

input::-moz-focus-inner,
button::-moz-focus-inner,
select::-moz-focus-inner,
textarea::-moz-focus-inner {
  padding: 0;
  border: none;
}

input.is-readonly,
button.is-readonly,
select.is-readonly,
textarea.is-readonly {
  font-style: italic;
}

input[type="checkbox"],
input[type="radio"] {
  --size: 1.25em;
  width: var(--size);
  height: var(--size);
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
}

input[type="checkbox"]:checked {
  background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 7.5'><polyline points='1,3 4,6 9,1' fill='none' stroke='%232b4eed' stroke-width='2' /></svg>");
  background-repeat: no-repeat;
  background-position: center;
}

input[type="radio"] {
  border-radius: 50%;
  padding: 3px;
  background-clip: content-box;
}

input[type="radio"]:checked {
  background-color: var(--blue);
}

button {
  border-width: var(--button_border-width);
  cursor: pointer;
}

select {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 4'><polyline points='1,1 3,3 5,1' fill='none' stroke='%23777' /></svg>");
  background-repeat: no-repeat;
  background-position: right 0.375em center;
  background-size: auto 0.75em;
  padding-right: 1.875em;
}

textarea {
  width: 100%;
  resize: vertical;
}

a {
  color: var(--blue);
}

label {
  margin: 0;
  font-weight: inherit;
}

p {
  margin: 0;
}

p + p {
  margin-top: 5px;
}

kbd {
  padding: 0 4px;
  border: 2px solid var(--grey-luke);
  border-radius: 3px;
  font-size: 0.8em;
  font-family: inherit;
  font-style: normal;
  font-weight: normal;
}

pre {
  white-space: pre-wrap;
}

.Field {
  --border-width: 1px;
  --padding-horizontal: var(--Field_padding-horizontal);
  --padding-vertical: 18px;
  border-top: var(--border-width) solid var(--grey-luke);
  padding: var(--padding-vertical) var(--padding-horizontal);
  position: relative;
}

.Field:first-child {
  border-top: none;
}

.Field::before,
.Field::after {
  content: "";
  position: absolute;
  top: calc(-1 * var(--border-width));
  bottom: calc(-1 * var(--border-width));
  left: 0;
  width: var(--Field_changed-width);
  background-color: var(--blue);
  opacity: 0;
  transition: opacity 200ms;
}

.Field::after {
  left: auto;
  right: 0;
}

.Field:first-child::before,
.Field:first-child::after {
  top: 0;
}

.Field:last-child::before,
.Field:last-child::after {
  bottom: 0;
}

.Field.is-changed,
.Field.is-changedRight {
  z-index: 1;
}

.Field.is-changed::before,
.Field.is-changedRight::after {
  opacity: 1;
}

/* This CSS only supports connecting two fields. */
.Field:first-child.is-connected,
.Field:not(.is-connected) + .Field.is-connected {
  padding-bottom: calc(var(--padding-vertical) / 2);
}

.Field.is-connected + .Field.is-connected {
  border-top: none;
  padding-top: calc(var(--padding-vertical) / 2);
}

.Field:first-child.is-connected::before,
.Field:first-child.is-connected::after,
.Field:not(.is-connected) + .Field.is-connected::before,
.Field:not(.is-connected) + .Field.is-connected::after {
  bottom: 0;
}

.Field.is-connected + .Field.is-connected::before,
.Field.is-connected + .Field.is-connected::after {
  top: 0;
}

.Field.is-fullWidth {
  padding-left: 0;
  padding-right: 0;
}

.Field-label {
  display: block;
  padding-bottom: var(--tiny-space);
  font-weight: bold;
}

.Field.is-fullWidth .Field-label {
  padding-left: var(--Field_padding-horizontal);
  padding-right: var(--Field_padding-horizontal);
}

.TextSmall {
  font-size: 14px;
}

.Error {
  color: var(--red);
  font-weight: bold;
}

.Error a {
  color: inherit;
}

.Attachment {
  display: flex;
  position: relative;
}

.Attachment-content {
  position: absolute;
  left: 0;
  bottom: 100%;
  width: 100%;
}

.TinyLabel {
  padding-bottom: var(--tiny-space);
  font-size: 12px;
}

.Spaced {
  display: flex;
}

.Spaced > * + * {
  margin-left: 0.625em;
}

.Spaced--center {
  align-items: center;
}

.Spaced--end {
  align-items: flex-end;
}

.SpacedVertical {
  display: flex;
  flex-direction: column;
}

.SpacedVertical > * + * {
  margin-top: 10px;
}

.KeypressTable {
  table-layout: fixed;
  border-spacing: 0;
  border: 1px solid var(--grey-luke);
  padding: 2px 0;
  width: 100%;
}

.KeypressTable th {
  text-align: left;
}

.KeypressTable td,
.KeypressTable th {
  padding: 2px 8px;
}

.KeysTable {
  border: 1px solid var(--grey-luke);
  width: 100%;
  height: 310px;
  overflow-y: auto;
}

.KeysTable.is-disabled {
  opacity: 0.5;
}

.KeysTable table {
  table-layout: fixed;
  border-spacing: 0;
  width: 100%;
}

.KeysTable thead th {
  position: sticky;
  top: 0;
  background-color: var(--grey-luke);
  text-align: left;
  font-weight: normal;
}

.KeysTable td,
.KeysTable th {
  padding: 0;
  padding-right: 4px;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.KeysTable td:first-child,
.KeysTable th:first-child {
  padding-left: 9px;
  width: 50%;
}

.KeysTable td:last-child,
.KeysTable th:last-child {
  width: 20px;
  padding: 0;
}

.KeysTable td:last-child button {
  width: 100%;
}

.KeysTable tbody tr:nth-child(even) td {
  background-color: var(--grey-leia);
}

.KeysTable tbody tr.is-animated td {
  animation: Highlight 1000ms ease-out forwards;
}

@keyframes Highlight {
  from,
  20% {
    box-shadow: inset 0 0 0 99px var(--blue);
    color: white;
  }

  to {
    box-shadow: inset 0 0 0 99px transparent;
    color: inherit;
  }
}

.KeysTable td.is-changed {
  background-image: linear-gradient(to right, var(--blue) 3px, transparent 0);
}

.RemoveButton {
  --size: 20px;
  border: none;
  background: none;
  padding: 0;
  min-width: var(--size);
  font-size: var(--size);
  line-height: 1;
}

.RemoveButton:hover,
.RemoveButton:focus {
  color: var(--blue);
}

.AddShortcutButton {
  align-self: flex-start;
  margin-left: auto;
  flex-shrink: 0;
}

.AddShortcutButton-button {
  --size: 28px;
  width: var(--size);
  height: var(--size);
  padding: 0;
  line-height: 0;
}

.ShortcutsTable {
  table-layout: fixed;
  border-spacing: 0;
  width: 100%;
}

.ShortcutsTable td,
.ShortcutsTable th {
  padding: 3px;
  padding-left: 5px;
  vertical-align: top;
}

.ShortcutsTable th {
  padding-top: 6px;
  padding-left: calc(
    var(--Field_padding-horizontal) - var(--Field_changed-width)
  );
  border-left: var(--Field_changed-width) solid transparent;
  width: calc(50%);
  font-weight: normal;
  text-align: left;
  transition: border-color 200ms;
}

.ShortcutsTable th.is-changed {
  border-left-color: var(--blue);
}

.ShortcutsTable td {
  padding-right: var(--Field_padding-horizontal);
}

.ShortcutsTable tbody tr:nth-child(odd) td,
.ShortcutsTable tbody tr:nth-child(odd) th {
  background-color: var(--grey-leia);
}

.ShortcutsGrid {
  --spacing-vertical: 3px;
  --spacing-horizontal: 10px;
  display: flex;
  flex-wrap: wrap;
  margin: calc(-1 * var(--spacing-vertical))
    calc(-1 * var(--spacing-horizontal));
  width: 100%;
}

.ShortcutsGrid > * {
  flex: 1 1 50%;
  display: flex;
  padding: var(--spacing-vertical) var(--spacing-horizontal);
}

.Preview {
  position: relative;
  border: 1px solid var(--grey-luke);
  overflow: auto;
}

.KeyboardShortcut {
  white-space: nowrap;
}

.KeyboardShortcut > * + * {
  margin-left: 1px;
}

.ButtonWithPopup {
  position: relative;
}

.ButtonWithPopup {
  position: relative;
}

.ButtonWithPopup.is-open .ButtonWithPopup-button {
  position: relative;
  z-index: 2;
  border-color: var(--blue);
}

.ButtonWithPopup.is-open .ButtonWithPopup-button::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: var(--button_border-width);
  background-color: white;
}

.ButtonWithPopup-popup {
  position: absolute;
  z-index: 1;
  top: calc(100% - var(--button_border-width));
  right: 0;
  border: var(--button_border-width) solid var(--blue);
  background-color: white;
  padding: 20px;
}
